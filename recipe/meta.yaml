{% set min_python = "python >=3.8" %}
{% set version = "0.12.0" %}
{% set min_python = "python >=3.8" %}

package:
  name: typer
  version: {{ version }}

source:
  - folder: dist
    url: https://pypi.io/packages/source/t/typer/typer-{{ version }}.tar.gz
    sha256: 900fe786ce2d0ea44653d3c8ee4594a22a496a3104370ded770c992c5e3c542d
  - folder: src
    url: https://github.com/tiangolo/typer/archive/refs/tags/{{ version }}.tar.gz
    sha256: 04e1914b981da512e22a6c4021df877a54b95bf123fa2af4cbdb25950c2b72d5

build:
  noarch: python
  number: 0
  script: cd dist && {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation

requirements:
  host:
    - {{ min_python }}
    - pdm-backend
    - pip
  run:
    - {{ min_python }}
    - click >=8.0.0
    - colorama >=0.4.3,<0.5.0
    - rich >=10.11.0,<14.0.0
    - shellingham >=1.3.0,<2.0.0
    - typing-extensions >=3.7.4.3

test:
  source_files:
    - src/tests
    - src/docs_src
  imports:
    - typer
  requires:
    - coverage
    - pip
    - pytest-sugar
  commands:
    - pip check
    - cd src && coverage run --source typer --branch -m pytest -vv --color=yes --tb=long -k "not ((multiple_values and main) or completion)"
    - coverage report --show-missing --skip-covered --fail-under=74

about:
  home: https://github.com/tiangolo/typer
  license: MIT
  license_family: MIT
  license_file: dist/LICENSE
  summary: A library for building CLI applications
  doc_url: https://typer.tiangolo.com
  description: |
    Typer is library for building CLI applications that users will love using and developers will love creating. Based on Python 3.6+ type hints.

    The key features are:

    Intuitive to write: Great editor support. Completion everywhere. Less time debugging. Designed to be easy to use and learn. Less time reading docs.
    Easy to use: It's easy to use for the final users. Automatic help, and automatic completion for all shells.
    Short: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.
    Start simple: The simplest example adds only 2 lines of code to your app: 1 import, 1 function call.
    Grow large: Grow in complexity as much as you want, create arbitrarily complex trees of commands and groups of subcommands, with options and arguments.

extra:
  recipe-maintainers:
    - dfornika
    - bollwyvl
